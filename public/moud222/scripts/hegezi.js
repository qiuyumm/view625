var chart = echarts.init(document.getElementById('mapChart'));
        
var option = {
    bmap: {
        center: [113.58239, 34.68757], // 设置地图中心点
        zoom: 7,
        roam: true
    },
    tooltip: {
        trigger: 'item'
    },
    visualMap: {
        type: "piecewise",
        splitNumber: 7,
        // min: 0,
        // max: 500,
        pieces:[
            {min:500},
            {min: 250, max: 500},
            {min: 150, max: 250},
            {min: 115, max: 150},
            {min: 75, max: 115},
            {min: 35, max: 75},
            {min: 0, max: 35},
        ],
        left: 'left',
        top: 'top',
        // text: ['High', 'Low'],
        calculable: true,
        inRange:{
            color:['#74c01f','#d4cf18','#fa8718','#d12b2b','#9d2124','#691888','#000000']
        }
    },
    series: []
};

chart.setOption(option);

// // 读取并处理CSV数据
// function loadCSVData(url) {
//     fetch(url)
//         .then(response => response.text())
//         .then(data => {
//             const parsedData = parseCSVData(data);
//             const series = convertToSeries(parsedData);
//             chart.setOption({
//                 series: [{
//                     type: 'heatmap',
//                     coordinateSystem: 'bmap',
//                     data: series,
//                     pointSize: 5,
//                     blurSize: 6
//                 }]
//             });
//         });
// }

// CSV数据嵌入到HTML中
const csvData = `longitude,latitude,value
113.69031,34.76122,138.1839696
113.65724,34.77134,137.3781232
113.67526,34.80246,82.85062515
113.56746,34.81334,72.35044932
113.7329,34.7178,109.406831
113.73961,34.77172,131.1677257
113.60532,34.74838,101.768024
113.64164,34.7525,112.5496
113.51488,34.91089,71.5407986
112.3628,34.6692,62.81863209
112.3931,34.6516,125.0138266
112.4333,34.67,98.15223799
112.4657,34.6871,115.4091422
112.494,34.6886,123.0750575
112.3844,34.623,89.96245454
112.4267,34.6258,116.5743976
114.4839,36.0621,65.53614264
114.3551,36.1017,81.84769383
114.361,36.0681,118.5258906
114.3931,36.0883,90.58797862
114.286,36.11,60.46814815
114.3406,34.8022,75.44439589
114.3389,34.7781,157.409813
114.3733,34.7975,64.58771818
114.2885,34.7965,91.30977131
113.261,35.235,84.50958654
113.2269,35.2127,73.55142936
113.2467,35.176,82.19401161
113.1987,35.2703,88.59085215
113.3064,33.7214,82.10857512
113.3257,33.742,122.9838595
113.2919,33.737,126.024023
113.182,33.774,127.7720906
111.1922,34.7752,57.55054911
111.1587,34.7942,167.5641792
111.1858,34.7917,74.37350751
111.143,34.7955,76.72488013
114.1099,32.1059,124.5086717
113.9956,32.1271,110.6749277
114.0775,32.1195,108.5041601
114.0609,32.1399,81.18485075
114.6613,33.6128,170.5247146
114.6758,33.6347,118.1181858
114.6546,33.5979,158.5883017
114.6369,33.6406,87.7832828
114.17,35.9019,101.511924
114.2956,35.7511,139.0274438
114.2878,35.7306,52.37053734
113.926,35.279,77.57135115
113.836,35.311,145.91844
113.884,35.272,106.7759661
113.883,35.303,106.0899246
115.0312,35.7636,120.6280697
114.9906,35.767,106.0511048
115.0574,35.7609,99.86566235
115.0866,35.7754,75.59304038
113.8276,34.0159,144.4190048
113.8208,34.0314,80.54149857
113.7906,33.9953,66.02703576
114.051,33.5699,150.1873066
114.0055,33.5698,123.0861315
114.0138,33.5828,167.1644173
114.0261,33.5698,191.159922
112.5192,32.9917,80.98442507
112.5339,33.0086,129.2604825
112.5003,32.9735,102.8116135
112.5779,33.0144,97.90910928
112.548,32.9692,100.164285
115.6702,34.4285,102.7695334
115.6458,34.4045,140.1630739
115.6293,34.3948,159.1870786
115.6578,34.402,60.15103691
114.0189,32.9656,115.2697016
114.0114,33.015,121.9653578
113.9976,32.9771,128.6859501
115,35.7668,135.6488472
112.4433,34.6686,73.75916573
111.1911,34.7829,138.7243884
113.9194,35.2847,114.9653726
113.8172,34.0339,116.3098202
114.3922,36.0878,85.0133016
114.3438,34.8106,145.2896791
113.2725,35.2071,123.9589214
115.6071,34.4465,67.84652341
113.3025,33.73,69.36623865
114.3644,34.7964,73.67799686
113.3137,35.2641,133.2967613
113.2465,35.2373,114.9483143
113.8614,34.0442,72.17961325
113.843,34.0823,126.189863
114.0012,33.0412,90.34740977
112.6005,34.6326,155.0290532
112.4951,34.6332,119.8585178
113.616563,34.86783,91.25972806
114.2485,34.8306,74.57791013
114.2617,35.6822,109.9388655
113.9188,35.3045,132.4344137
113.9135,35.3327,103.3000646
113.1656,35.2539,114.1527056
113.9749,33.5664,171.3838431
114.0967,33.5906,97.48485532
113.8374,34.5589,93.86902099
113.30952,34.803229,147.1797122
114.4644,34.7556,118.5507875
112.5736,34.8993,90.47018019
112.8867,33.9116,119.6385929
114.1572,35.9603,94.72084034
113.8134,34.1251,133.7995918
111.1,34.7167,85.41385472
112.3677,34.662,146.6209107
112.4388,34.6781,134.6264822
114.4705,36.0637,79.54445396
113.9003,35.372,147.9960355
114.2917,36.0949,99.70188619`;

// 解析CSV数据
function parseCSVData(data) {
    const lines = data.split('\n');
    const result = [];
    for (let i = 1; i < lines.length; i++) {
        const line = lines[i].split(',');
        const longitude = parseFloat(line[0]);
        const latitude = parseFloat(line[1]);
        const value = parseFloat(line[2]);
        if (!isNaN(longitude) && !isNaN(latitude) && !isNaN(value)) {
            result.push([longitude, latitude, value]);
        }
    }
    return result;
}

// 转换数据格式为ECharts系列格式
function convertToSeries(data) {
    return data.map(item => [item[0], item[1], item[2]]);
}

// 处理CSV数据
const parsedData = parseCSVData(csvData);
const series = convertToSeries(parsedData);
chart.setOption({
    series: [{
        type: 'heatmap',
        coordinateSystem: 'bmap',
        data: series,
        pointSize: 5,
        blurSize: 6
    }]
});

// 在ECharts初始化完成后获取BMap实例
chart.on('finished', function () {
    var bmap = chart.getModel().getComponent('bmap').getBMap();
    bmap.addControl(new BMap.MapTypeControl({
        mapTypes: [BMAP_NORMAL_MAP, BMAP_SATELLITE_MAP, BMAP_HYBRID_MAP]
    }));
    bmap.addControl(new BMap.ScaleControl());
    
    // 禁用双击缩放
    bmap.disableDoubleClickZoom();

    bmap.addEventListener('click', function(e) {
        alert('点击的经纬度：' + e.point.lng + ', ' + e.point.lat);
        // var mercator = bmap.lngLatToMercator(new BMap.Point(e.point.lng, e.point.lat));
        // alert('点的墨卡托坐标：' + mercator.lng + ', ' + mercator.lat);
        // var point = e.point;
        // // 向后端发送请求
        // var lng = point.lng;
        // var lat = point.lat;
        // fetch('/dian', {
        //     method: 'POST',
        //     headers: {
        //         'Content-Type': 'application/json'
        //     },
        //     body: JSON.stringify({ longitude: lng, latitude: lat })
        // })
        // .then(response => response.json())
        // .then(data => {
        //     // 显示服务器返回的信息
        //     alert(data.message);
        // })
        // .catch((error) => {
        //     console.error('错误:', error);
        // });
    });
});